Change List:

3.0.4:
    - Library updates.
3.0.3:
    - Display status icon in inspector for fields that are disabled due to a
      lack of a setter.
    - Made compatible with changes to UndoPropertyModification in Unity 5.1.
    - Fixed an exception when using a setter for an array of structs.
3.0.2:
    - Added EulerAnglesAttribute and EulerAnglesDrawer for Quaternion fields.
3.0.1:
    - Fixed exception with properties that are arrays or lists of enums.
    - Library updates.
3.0.0:
    - Added new PropertyBackingFieldAttribute constructors that take no
      parameters or fewer parameters, assuming the backing field starts with
      either "m_" or "_".
    - Old PropertyBackingFieldAttribute constructors are now obsolete.
    - Moved all files into Plugins directory to reduce compile times and allow
      compatibility with languages other than C#.
2.0.11:
    - Unity 4.6 is new minimum version.
    - Library updates.
    - Changed version numbering scheme.
2.10:
    - Unify project layout and asset IDs across asset store products.
2.09:
    - Removed errant script from examples folder.
2.08:
    - Fixed bug where changes to nested structs were not flushed to asset.
2.07:
    - Fixed bug getting private getters/setters on generic base classes.
    - Fixed bug with generic getters/setters on concrete classes.
    - Fixed bug in ArrayPropertySetterExampleEditor.
2.06:
    - Fix ExitGUIException thrown when object picker opens for serialized field
      with no custom drawer specified.
2.05:
    - Added tags to assets to improve asset store searchability.
2.04:
    - Library updates.
2.03:
    - Decorator drawers now only double-up on generic properties (i.e. custom
      classes and structs).
    - Decorator drawers no longer cause default array editors to collapse.
2.02:
    - Properties with no drawer override now correctly display label overrides.
    - Fixed exception when adding new array elements using default array drawer.
    - Added support for array setters with multiple method signatures. The
      inspector will invoke the one whose parameter matches the return type of
      the get method.
    - Added support for properties and get/set methods on classes that are a
      concrete implementation of a generic class.
    - Decorator drawers on a backing field now overdraw instead of displaying in
      succession.
2.01:
    - Free up memory when selection has changed.
2.0:
    - Unity 4.5 is new minimum version.
    - Added IPropertyBackingFieldCompatible interface and
      PropertyBackingFieldCompatibleObject base class, which are used to support
      custom serializable structs and classes.
    - You can now use setter logic that only triggers on value changes! Note
      that custom serializable classes will always supply a clone.
    - Full support for undo/redo and reverting to prefab for all property types
      in any play mode state!
    - PropertyBackingFieldDrawer.DisplayArrayPropertyField() and
      PropertyBackingFieldDrawer.DisplayReorderableListPropertyField() were
      removed and are no longer necessary!
    - No naming assumptions are made for IList backing fields and their
      respective properties anymore!
    - Properties and their respective backing fields need not match type, as
      long as the backing field type is assignable from the property type.
    - Fixed bug that could cause some enum properties to not be set properly.
    - Fixed bug calculating property drawer height when property was followed by
      another whose name was prefixed with the preceding property's name.
    - Changed some access modifiers and method signatures of utility methods
      which should generally not be needed anyway.
1.05:
    - Added PropertyBackingFieldDrawer.DisplayArrayPropertyField() and
      PropertyBackingFieldDrawer.DisplayReorderableListPropertyField() utility
      methods for use in custom editors to invoke array property setters when
      array size drops to 0.
1.04:
    - Fixed bug that could cause array setters on prefabs to infinitely invoke.
    - Some accomodations for multi-select.
    - Library updates.
1.03:
    - Fixed bug that prevented detection of nonpublic setters.
1.02:
    - Backing fields for properties with no setter now display as disabled
      fields in the inspector, rather than throwing an exception.
1.01:
    - Property Backing Fields was released to the world!